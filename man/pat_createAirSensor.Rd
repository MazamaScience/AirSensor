% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pat_createAirSensor.R
\name{pat_createAirSensor}
\alias{pat_createAirSensor}
\title{Create an Air Sensor object}
\usage{
pat_createAirSensor(
  pat = NULL,
  period = "1 hour",
  parameter = "pm25",
  channel = "ab",
  qc_algorithm = "hourly_AB_01",
  min_count = 20,
  aggregation_FUN = pat_aggregate
)
}
\arguments{
\item{pat}{PurpleAir Timeseries \emph{pat} object.}

\item{period}{Time period to average over. Can be "sec", "min", "hour", 
"day", "DSTday", "week", "month", "quarter" or "year". A number can also
 precede these options followed by a space (i.e. "2 day" or "37 min").}

\item{parameter}{Parameter for which to create an \emph{as} object -- one of
"pm25", "humidity" or "temperature".}

\item{channel}{Data channel to use for PM2.5 -- one of "a", "b or "ab".}

\item{qc_algorithm}{Named QC algorithm to apply to hourly aggregation stats.}

\item{min_count}{Aggregation bins with fewer than `min_count` measurements
will be marked as `NA`.}

\item{aggregation_FUN}{Function used to convert a \emph{pat} object into a
tibble of hourly statistics.}
}
\value{
An "airsensor" object of aggregated PurpleAir Timeseries data.
}
\description{
Converts data from a \emph{pat} object with an irregular time 
axis to an \emph{airsensor} object where the numeric data has been aggregated 
along a standardized hourly time axis, as well as adding additional required 
metadata for compatibility with the *PWFSLSmoke* package.

Current QC algorithms exist for \code{channel = "ab"} and include:
\itemize{
\item{\code{hourly_AB_00}}
\item{\code{hourly_AB_01}}
}
}
\note{
The \code{aggregation_FUN}, allows users to pass in custom functions that 
generate new aggregation statistics. These statistics can then be utilized 
in a custom QC algorithm function. The algorithm function applied is
generated from the \code{qc_algorithm} parameter with 
\code{paste0("PurpleAirQC_", qc_algorithm)}.
}
\examples{

sensor <- 
  example_pat \%>\%
  pat_filterDate(20180701, 20180901) \%>\%
  pat_createAirSensor()
PWFSLSmoke::monitor_dailyBarplot(sensor)

}
\seealso{
\link{PurpleAirQC_hourly_AB_00}

\link{PurpleAirQC_hourly_AB_01}

\link{pat_aggregate}
}
